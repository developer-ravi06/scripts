#Script to validate multiple passwords on multiple remove servers in Linux

#create a file with hosts.txt and mention host list inside file

host1
host2
host3

#create a file with passwords.txt and mention password list inside file

pass123
pass234
pass456


Logs - It will create all successful connection log insode file named "successful_connections.log"

#Run below shell script

*********************************************************************
#!/bin/bash

# Check for required files
[ ! -f "hosts.txt" ] && { echo "hosts.txt not found!"; exit 1; }
[ ! -f "passwords.txt" ] && { echo "passwords.txt not found!"; exit 1; }

# Log file for successful connections
log_file="successful_connections.log"
> "$log_file"  # Clear the log file

# Function to check passwords for a server
check_passwords() {
    local server="$1"
    while IFS= read -r password; do
        [ -z "$password" ] && continue  # Skip empty passwords
        echo "Validating $server with password '$password'..."
        
        # Attempt SSH connection
        if sshpass -p "$password" ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5 "$server" 'exit' 2>/dev/null; then
            echo "Password '$password' is correct for $server."
            echo "$server - $password" >> "$log_file"
        else
            echo "Password '$password' is incorrect for $server."
        fi
    done < passwords.txt
}

# Main execution
while IFS= read -r server; do
    [ -z "$server" ] && continue  # Skip empty servers
    echo "Checking server: $server"
    check_passwords "$server"
done < hosts.txt

echo "Logging completed. Check $log_file for successful connections."
